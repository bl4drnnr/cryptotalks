version: '3.8'

services:
  front:
    container_name: cryptotalks-front
    restart: always
    env_file:
      - .env.${NODE_ENV}
    build:
      context: ./services/front
      dockerfile: ./Dockerfile
    command: npm run dev
    volumes:
      - ./services/front:/usr/src/cryptotalks-front
    ports:
      - ${FRONT_PORT}:${FRONT_PORT}
    networks:
      - cryptotalks_cryptotalks-network
  users:
    container_name: cryptotalks-users
    restart: always
    env_file:
      - .env.${NODE_ENV}
    build:
      context: .
      dockerfile: ./dockerfiles/users/Dockerfile
    command: npm run start:dev
    volumes:
      - ./services/users:/usr/src/cryptotalks-users
      - ./services/common/models:/usr/src/cryptotalks-users/src/models
    depends_on:
      - api
    ports:
      - ${USERS_SERVICE_PORT}:${USERS_SERVICE_PORT}
    networks:
      - cryptotalks_cryptotalks-network
  crypto-rates:
    container_name: cryptotalks-crypto-rates
    restart: always
    env_file:
      - .env.${NODE_ENV}
    build:
      context: .
      dockerfile: ./dockerfiles/crypto-rates/Dockerfile
    command: npm run start:dev
    volumes:
      - ./services/crypto-rates:/usr/src/cryptotalks-crypto-rates
      - ./services/common/models:/usr/src/cryptotalks-crypto-rates/src/models
    depends_on:
      - api
    ports:
      - ${CRYPTO_RATES_SERVICE_PORT}:${CRYPTO_RATES_SERVICE_PORT}
    networks:
      - cryptotalks_cryptotalks-network
  auth:
    container_name: cryptotalks-auth
    restart: always
    env_file:
      - .env.${NODE_ENV}
    build:
      context: .
      dockerfile: ./dockerfiles/auth/Dockerfile
    command: npm run start:dev
    volumes:
      - ./services/auth:/usr/src/cryptotalks-auth
      - ./services/common/models:/usr/src/cryptotalks-auth/src/models
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}
    depends_on:
      - api
    networks:
      - cryptotalks_cryptotalks-network
  posts:
    container_name: cryptotalks-posts
    restart: always
    env_file:
      - .env.${NODE_ENV}
    build:
      context: .
      dockerfile: ./dockerfiles/posts/Dockerfile
    command: npm run start:dev
    volumes:
      - ./services/posts:/usr/src/cryptotalks-posts
      - ./services/common/models:/usr/src/cryptotalks-posts/src/models
    ports:
      - ${POSTS_SERVICE_PORT}:${POSTS_SERVICE_PORT}
    depends_on:
      - api
    networks:
      - cryptotalks_cryptotalks-network
  api:
    container_name: cryptotalks-api
    restart: always
    env_file:
      - .env.${NODE_ENV}
    build:
      context: .
      dockerfile: ./dockerfiles/api/Dockerfile
    command: npm run start:dev
    volumes:
      - ./services/api:/usr/src/cryptotalks-api
      - ./services/common/models:/usr/src/cryptotalks-api/src/models
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      - db
    networks:
      - cryptotalks_cryptotalks-network
  db:
    image: postgres
    container_name: cryptotalks-db
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
      - /:/data/postgres
    networks:
      - cryptotalks_cryptotalks-network


networks:
  cryptotalks_cryptotalks-network:
    driver: bridge
    external: true
