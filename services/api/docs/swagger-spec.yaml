openapi: 3.0.0
paths:
  /api/posts/create:
    post:
      operationId: PostsController_createPost
      summary: Responsible for post creation
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePostDto"
      responses:
        "201":
          description: As a response function returns success message
      tags: &a1
        - Posts
  "/api/posts/get/{slug}":
    get:
      operationId: PostsController_getPostBySlug
      summary: Gets post by its slug
      parameters:
        - name: slug
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "201":
          description: As a response function returns post
      tags: *a1
  "/api/posts/list/{page}/{pageSize}/{order}/{orderBy}":
    get:
      operationId: PostsController_getAllPosts
      summary: List posts
      parameters:
        - name: page
          required: true
          in: path
          schema:
            type: number
        - name: pageSize
          required: true
          in: path
          schema:
            type: number
        - name: order
          required: true
          in: path
          schema:
            type: string
        - name: orderBy
          required: true
          in: path
          schema:
            type: string
        - name: searchQuery
          required: true
          in: query
          schema:
            type: string
        - name: username
          required: true
          in: query
          schema:
            type: string
        - name: tags
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
        "201":
          description: As a response function returns list of posts
      tags: *a1
  "/api/posts/delete/{id}":
    delete:
      operationId: PostsController_deletePost
      summary: Responsible for post deletion
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "201":
          description: As a response function returns success message
      tags: *a1
  "/api/posts/update/{id}":
    patch:
      operationId: PostsController_updatePost
      summary: Responsible for post update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePostDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "201":
          description: As a response function returns success message
      tags: *a1
  "/api/posts/comment/{id}":
    patch:
      operationId: PostsController_leaveComment
      summary: Allows users to leave comments
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LeaveCommentDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "201":
          description: As a response function returns success message
      tags: *a1
  "/api/posts/rate/post/{id}":
    patch:
      operationId: PostsController_ratePost
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
      tags: *a1
  "/api/posts/rate/comment/{id}":
    patch:
      operationId: PostsController_rateComment
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
      tags: *a1
  /api/user/sign-up:
    post:
      operationId: UserController_signUp
      summary: Responsible for user account creation
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpDto"
      responses:
        "201":
          description: As a response function gets 2 tokens - refresh and access
      tags: &a2
        - User
  /api/user/sign-in:
    post:
      operationId: UserController_signIn
      summary: Responsible for user login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInDto"
      responses:
        "201":
          description: As a response function returns success message
      tags: *a2
  "/api/user/account-confirmation/{confirmationHash}":
    get:
      operationId: UserController_confirmAccount
      summary: Confirm user registration
      parameters:
        - name: confirmationHash
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "201":
          description: As a response function returns success message
      tags: *a2
  "/api/user/email-change-confirmation/{confirmationHash}":
    get:
      operationId: UserController_confirmEmailChange
      summary: Confirm email change
      parameters:
        - name: confirmationHash
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/logout:
    get:
      operationId: UserController_logout
      summary: Logouts user
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/change-email:
    post:
      operationId: UserController_changeEmail
      summary: Changes user email address
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeEmailDto"
      responses:
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/change-password:
    post:
      operationId: UserController_changePassword
      summary: Changes user password
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordDto"
      responses:
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/close-account:
    post:
      operationId: UserController_closeAccount
      summary: Closes are removes an account of an user
      parameters: []
      responses:
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/set-2fa:
    post:
      operationId: UserController_setTwoFa
      summary: Sets multi-factor authentication for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Set2faDto"
      responses:
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/remove-2fa:
    post:
      operationId: UserController_removeTwoFa
      summary: Removes multi-factor authentication for user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Remove2faDto"
      responses:
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/set-phone:
    post:
      operationId: UserController_setPhone
      summary: Sets multi-factor authentication for user (phone)
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetPhoneDto"
      responses:
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/remove-phone:
    post:
      operationId: UserController_removePhone
      summary: Removes phone from user account
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemovePhoneDto"
      responses:
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/user/get-settings:
    get:
      operationId: UserController_getUserSettings
      summary: Allows to get user settings in order to change them
      parameters: []
      responses:
        "200":
          description: ""
        "201":
          description: As a response function returns both security settings and personal
            information
      tags: *a2
  /api/user/set-personal-settings:
    patch:
      operationId: UserController_setPersonalSettings
      summary: Sets user personal information settings
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserEventDto"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "201":
          description: As a response function returns success message
      tags: *a2
  /api/auth/refresh:
    get:
      operationId: AuthController_refreshTokens
      summary: Refreshes tokens
      parameters: []
      responses:
        "200":
          description: ""
        "201":
          description: Refreshes both tokens and returns to user
      tags:
        - Authentication
  "/api/crypto/list/{page}/{pageSize}/{order}/{orderBy}":
    get:
      operationId: CryptoController_getAllCryptos
      summary: List cryptos
      parameters:
        - name: page
          required: true
          in: path
          schema:
            type: number
        - name: pageSize
          required: true
          in: path
          schema:
            type: number
        - name: order
          required: true
          in: path
          schema:
            type: string
        - name: orderBy
          required: true
          in: path
          schema:
            type: string
        - name: searchQuery
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          description: ""
        "201":
          description: As a response function returns list of posts
      tags: &a3
        - Crypto
  "/api/crypto/get/{uuid}":
    get:
      operationId: CryptoController_getCryptoById
      summary: Gets crypto by its id
      parameters:
        - name: uuid
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: object
        "201":
          description: As a response function returns cryptocurrency
      tags: *a3
  /api/crypto/market-stats:
    get:
      operationId: CryptoController_getMarketStats
      summary: Get market stats
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MarketStats"
        "201":
          description: As a response function returns market stats
      tags: *a3
  "/api/crypto/favorites/{id}":
    patch:
      operationId: CryptoController_addCryptoToFavorites
      summary: Adds a crypto to user's favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "201":
          description: As a response function returns success message
      tags: *a3
  "/api/crypto/favorite/{id}":
    delete:
      operationId: CryptoController_removeCryptoFromFavorites
      summary: Removes a crypto to user's favorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResponseDto"
        "201":
          description: As a response function returns success message
      tags: *a3
info:
  title: Cryptotalks - API Gateway
  description: Documentation of Cryptotalks' API Gateway.
  version: 0.0.1
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreatePostEvent:
      type: object
      properties: {}
    IRate:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the user
        rate:
          type: string
          nullable: false
          description: Rate (either positive or negative)
      required:
        - userId
        - rate
    IComment:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the user
        commentRates:
          type: string
          nullable: false
          description: Rate (either positive or negative)
        payload:
          type: string
          nullable: false
          description: Comment payload
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Date when comment has been left
      required:
        - userId
        - commentRates
        - payload
        - createdAt
    PostInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the record
        postId:
          type: string
          format: uuid
          nullable: false
          description: Post Id
        rates:
          nullable: false
          description: List of users rates of post
          type: array
          items:
            $ref: "#/components/schemas/IRate"
        comments:
          nullable: false
          description: List of id of comments
          type: array
          items:
            $ref: "#/components/schemas/IComment"
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Record creation date
        updatedAt:
          format: date-time
          type: string
          nullable: false
          description: Record update date
      required:
        - id
        - postId
        - rates
        - comments
        - createdAt
        - updatedAt
    Post:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the record
        userId:
          type: string
          format: uuid
          nullable: false
          description: User Id
        username:
          type: string
          nullable: false
          description: Username of post creator
        title:
          type: string
          nullable: false
          description: Title of the post
        slug:
          type: string
          nullable: false
          description: Slug of the post
        content:
          nullable: false
          description: Content of the post
          type: array
          items:
            type: string
        preview:
          type: string
          nullable: false
          description: Short preview of the post
        searchTags:
          nullable: false
          description: Search tags
          type: array
          items:
            type: string
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Record creation date
        updatedAt:
          format: date-time
          type: string
          nullable: false
          description: Record update date
      required:
        - id
        - userId
        - username
        - title
        - slug
        - content
        - preview
        - searchTags
        - createdAt
        - updatedAt
    CreatePostDto:
      type: object
      properties:
        title:
          type: string
          nullable: false
        content:
          nullable: false
          type: array
          items:
            type: string
        userId:
          type: string
          format: uuid
          nullable: false
        username:
          type: string
          nullable: false
        preview:
          type: string
          nullable: false
        searchTags:
          nullable: false
          type: array
          items:
            type: string
      required:
        - title
        - content
        - userId
        - username
        - preview
        - searchTags
    DeletePostEventDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
      required:
        - id
    DeletePostEvent:
      type: object
      properties: {}
    ResponseDto:
      type: object
      properties:
        message:
          type: string
          nullable: false
      required:
        - message
    UpdatePostEventDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        content:
          nullable: true
          type: array
          items:
            type: string
        preview:
          type: string
          nullable: true
        searchTags:
          nullable: true
          type: array
          items:
            type: string
        postId:
          type: string
          format: uuid
          nullable: false
      required:
        - title
        - content
        - preview
        - searchTags
        - postId
    UpdatePostDto:
      type: object
      properties:
        title:
          type: string
          nullable: true
        content:
          nullable: true
          type: array
          items:
            type: string
        preview:
          type: string
          nullable: true
        searchTags:
          nullable: true
          type: array
          items:
            type: string
    LeaveCommentEventDto:
      type: object
      properties:
        comment:
          type: string
          nullable: false
        postId:
          type: string
          format: uuid
          nullable: false
        userId:
          type: string
          format: uuid
          nullable: false
      required:
        - comment
        - postId
        - userId
    LeaveCommentEvent:
      type: object
      properties: {}
    LogEventDto:
      type: object
      properties:
        message:
          type: string
          nullable: false
        event:
          type: array
          nullable: false
          items:
            type: string
            enum:
              - SIGN_IN
              - SIGN_UP
              - CONFIRMATION
              - POST
              - CLOSE_ACC
              - USER
              - CRYPTO
        status:
          type: SUCCESS | ERROR
          nullable: false
        timestamp:
          format: date-time
          type: string
          nullable: false
      required:
        - message
        - event
        - status
        - timestamp
    LogEvent:
      type: object
      properties: {}
    LeaveCommentDto:
      type: object
      properties:
        comment:
          type: string
          nullable: false
      required:
        - comment
    UserSettings:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the record
        userId:
          type: string
          format: uuid
          nullable: false
          description: User Id
        publicEmail:
          type: boolean
          nullable: true
          description: If user wants to set their email as public
        emailChanged:
          type: boolean
          nullable: false
          description: User is allowed to change email only one time
        twoFaToken:
          type: boolean
          nullable: true
          description: Contains 2FA token if user set it up
        phone:
          type: string
          nullable: true
          description: User phone. Alternate 2FA method
        phoneVerificationCode:
          type: string
          nullable: true
          description: Phone verification code
        verificationCodeCreatedAt:
          format: date-time
          type: string
          nullable: true
          description: Verification code creation timestamp
        passwordChanged:
          format: date-time
          type: string
          nullable: true
          description: Users are allowed to change password only 1 time in 24h
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Record creation date
        updatedAt:
          format: date-time
          type: string
          nullable: false
          description: Record update date
      required:
        - id
        - userId
        - publicEmail
        - emailChanged
        - twoFaToken
        - phone
        - phoneVerificationCode
        - verificationCodeCreatedAt
        - passwordChanged
        - createdAt
        - updatedAt
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the record
        email:
          type: string
          nullable: false
          description: User email
        password:
          type: string
          nullable: false
          description: User hashed password
        accountConfirm:
          type: boolean
          nullable: false
          description: Checks if user confirmed account by clicking into link in email
            after registration
          default: false
        firstName:
          type: string
          nullable: true
          description: User first name
        lastName:
          type: string
          nullable: true
          description: User last name
        username:
          type: string
          nullable: false
          description: User username
        twitter:
          type: string
          nullable: true
          description: User Twitter account
        linkedIn:
          type: string
          nullable: true
          description: User LinkedIn account
        personalWebsite:
          type: string
          nullable: true
          description: User personal website
        title:
          type: string
          nullable: true
          description: User account title
        bio:
          type: string
          nullable: true
          description: User biography
        tac:
          type: boolean
          nullable: false
          description: User accepted terms and conditions
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Record creation date
        updatedAt:
          format: date-time
          type: string
          nullable: false
          description: Record update date
      required:
        - id
        - email
        - password
        - accountConfirm
        - firstName
        - lastName
        - username
        - twitter
        - linkedIn
        - personalWebsite
        - title
        - bio
        - tac
        - createdAt
        - updatedAt
    SignUpEventDto:
      type: object
      properties:
        confirmationHash:
          type: string
          nullable: true
        userId:
          type: string
          format: uuid
          nullable: false
        confirmationType:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      required:
        - confirmationHash
        - userId
        - confirmationType
        - email
    SignUpDto:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: false
        password:
          type: string
          nullable: false
        username:
          type: string
          nullable: false
        twitter:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        personalWebsite:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        tac:
          type: boolean
          nullable: false
        publicEmail:
          type: boolean
          nullable: true
      required:
        - email
        - password
        - username
        - tac
    Session:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the record
        tokenId:
          type: string
          format: uuid
          nullable: false
          description: Id of the token
        userId:
          type: string
          format: uuid
          nullable: false
          description: User id
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Record creation date
        updatedAt:
          format: date-time
          type: string
          nullable: false
          description: Record update date
      required:
        - id
        - tokenId
        - userId
        - createdAt
        - updatedAt
    SignInDto:
      type: object
      properties:
        email:
          type: string
          nullable: false
        password:
          type: string
          nullable: false
        twoFaCode:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      required:
        - email
        - password
    ConfirmationHash:
      type: object
      properties:
        id:
          type: string
          nullable: false
          default: uuidv4
          description: Unique Id of the record
        confirmationHash:
          type: string
          nullable: false
          description: Confirmation hash
        confirmed:
          type: boolean
          nullable: false
          description: If hash has been confirmed
        confirmationType:
          type: boolean
          nullable: false
          description: Type of confirmation
        changingEmail:
          type: string
          nullable: true
          description: Used for temporary storage of email to change
        userId:
          type: string
          format: uuid
          nullable: false
          description: User Id
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Record creation date
        updatedAt:
          format: date-time
          type: string
          nullable: false
          description: Record update date
      required:
        - id
        - confirmationHash
        - confirmed
        - confirmationType
        - changingEmail
        - userId
        - createdAt
        - updatedAt
    ConfirmAccountEventDto:
      type: object
      properties:
        hashId:
          type: string
          format: uuid
          nullable: false
        userId:
          type: string
          format: uuid
          nullable: false
        data:
          type: object
          nullable: true
      required:
        - hashId
        - userId
        - data
    ConfirmAccountEvent:
      type: object
      properties: {}
    UserLogoutEventDto:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: true
      required:
        - userId
    UserLogoutEvent:
      type: object
      properties: {}
    UpdateUserEventDto:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        linkedIn:
          type: string
          nullable: true
        personalWebsite:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        twitter:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
      required:
        - userId
        - email
        - password
        - bio
        - firstName
        - lastName
        - linkedIn
        - personalWebsite
        - title
        - twitter
        - username
    UpdateUserEvent:
      type: object
      properties: {}
    ChangeEmailDto:
      type: object
      properties:
        email:
          type: string
          nullable: false
        twoFaCode:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      required:
        - email
    ChangePasswordDto:
      type: object
      properties:
        password:
          type: string
          nullable: false
        passwordRepeat:
          type: string
          nullable: false
        code:
          type: string
          nullable: true
        twoFaCode:
          type: string
          nullable: true
      required:
        - password
        - passwordRepeat
    CloseAccEventDto:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
      required:
        - userId
    CloseAccEvent:
      type: object
      properties: {}
    Set2faDto:
      type: object
      properties:
        twoFaToken:
          type: string
          nullable: false
        twoFaCode:
          type: string
          nullable: false
      required:
        - twoFaToken
        - twoFaCode
    Remove2faDto:
      type: object
      properties:
        twoFaCode:
          type: string
          nullable: false
      required:
        - twoFaCode
    SetPhoneDto:
      type: object
      properties:
        phone:
          type: string
          nullable: false
        code:
          type: string
          nullable: true
      required:
        - phone
    RemovePhoneDto:
      type: object
      properties:
        code:
          type: string
          nullable: true
    TokenPayloadDto:
      type: object
      properties:
        id:
          type: string
          nullable: false
        type:
          type: access | refresh
          nullable: false
        userId:
          type: string
          nullable: false
      required:
        - id
        - type
        - userId
    RefreshTokenDto:
      type: object
      properties:
        userId:
          type: string
          nullable: false
        tokenId:
          type: string
          nullable: false
      required:
        - userId
        - tokenId
    AccessTokenDto:
      type: object
      properties:
        userId:
          type: string
          nullable: false
        email:
          type: string
          nullable: false
      required:
        - userId
        - email
    UpdateCoinEventDto:
      type: object
      properties:
        coinId:
          type: string
          nullable: false
      required:
        - coinId
    UpdateCoinEvent:
      type: object
      properties: {}
    FavoriteCoins:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the record
        userId:
          type: string
          format: uuid
          nullable: false
          description: User Id
        favoriteCoins:
          nullable: true
          description: List of user's favorite coins
          type: array
          items:
            type: string
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Record creation date
        updatedAt:
          format: date-time
          type: string
          nullable: false
          description: Record update date
      required:
        - id
        - userId
        - favoriteCoins
        - createdAt
        - updatedAt
    MarketStats:
      type: object
      properties:
        id:
          type: string
          format: uuid
          nullable: false
          default: uuidv4
          description: Unique Id of the record
        total:
          type: number
          nullable: false
          description: Total
        totalCoins:
          type: number
          nullable: false
          description: Total coins
        totalMarkets:
          type: number
          nullable: false
          description: Total markets
        totalExchanges:
          type: number
          nullable: false
          description: Total exchanges
        totalMarketCap:
          type: string
          nullable: false
          description: Total market cap
        total24hVolume:
          type: string
          nullable: false
          description: Total 24h volume
        createdAt:
          format: date-time
          type: string
          nullable: false
          description: Record creation date
        updatedAt:
          format: date-time
          type: string
          nullable: false
          description: Record update date
      required:
        - id
        - total
        - totalCoins
        - totalMarkets
        - totalExchanges
        - totalMarketCap
        - total24hVolume
        - createdAt
        - updatedAt
    AddCryptoToFavoriteEventDto:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
        cryptoId:
          type: string
          format: uuid
          nullable: false
      required:
        - userId
        - cryptoId
    AddCryptoToFavoriteEvent:
      type: object
      properties: {}
    RemoveCryptoToFavoriteEventDto:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
        cryptoId:
          type: string
          format: uuid
          nullable: false
      required:
        - userId
        - cryptoId
    RemoveCryptoToFavoriteEvent:
      type: object
      properties: {}
